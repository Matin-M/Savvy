services:
  bot:
    build:
      context: ./
      dockerfile: ${DOCKERFILE}
    restart: always
    depends_on:
      - db
      - logstash
    ports:
      - '3000:3000'
    volumes:
      - .:/app
    environment:
      PRODUCTION: true
      NODE_ENV: production
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    networks:
      mainnet:
        ipv4_address: '10.11.236.12'

  db:
    image: postgres:alpine3.17
    restart: always
    hostname: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '15432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      mainnet:
        ipv4_address: '10.11.236.10'

  logstash:
    image: docker.elastic.co/logstash/logstash:8.17.1
    container_name: logstash
    restart: always
    environment:
      - ES_HOST=${ES_HOST}
      - ES_USER=${ES_USER}
      - ES_PASSWORD=${ES_PASSWORD}
    depends_on:
      - db
    volumes:
      - './logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro'
    ports:
      - '5044:5044'
      - '9600:9600'
    networks:
      mainnet:
        ipv4_address: '10.11.236.21'

networks:
  mainnet:
    ipam:
      driver: default
      config:
        - subnet: '10.11.0.0/16'

volumes:
  db:
    driver: local
